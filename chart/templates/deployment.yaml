apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name | quote }}
  labels:
    {{ include "activity.labels" . | nindent 4 }}
  annotations:
    reloader.stakater.com/search: "true"
spec:
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: 5
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: "30%"
      maxSurge: 1
  selector:
    matchLabels:
      {{ include "activity.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      name: node
      labels:
        {{ include "activity.labels" . | nindent 8 }}
      annotations:
        kubectl.kubernetes.io/default-logs-container: node
    spec:
      serviceAccountName: {{ include "activity.serviceAccountName" . }}
      containers:
        - name: node
          ports:
            - name: http
              containerPort: 8085
          #livenessProbe:
          #  httpGet:
          #    path: /healthz
          #    port: http
          #readinessProbe:
          #  httpGet:
          #    path: /healthz
          #    port: http
          image: {{ .Values.image.name }}:{{ required "image.tag is required" .Values.image.tag }}
          imagePullPolicy: Always
          resources:
            limits:
              cpu: 1000m
              memory: 300Mi
            requests:
              cpu: 200m
              memory: 300Mi
          env:
            - name: AUTH0_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-auth0-client
                  key: client-id
            - name: AUTH0_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-auth0-client
                  key: client-secret
            - name: AUTH0_CALLBACK_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}
                  key: AUTH0_CALLBACK_URL
            - name: BROWSER_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}
                  key: BROWSER_URL
            - name: AUTH0_DOMAIN
              valueFrom:
                configMapKeyRef:
                  name: environment-info
                  key: auth0_tenant_domain 
            - name: G5_TOKEN_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}
                  key: G5_TOKEN_ENDPOINT
            - name: NOTE_SERVICE_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}
                  key: NOTE_SERVICE_URL
            - name: GA_PROPERTY
              value: "UA-115892674-18"
            - name: INCLUDE_G5_UPDATABLES
              value: "true"
            - name : INCLUDE_G5_AUTH
              value: "true"
            - name: DATABASE_DIALECT
              value: postgres
            - name: DATABASE_IDLE
              value: "10000"
            - name: DATABASE_AQUIRE
              value: "10000"
            - name: DATABASE_EVICT
              value: "10000"
            - name: DATABASE_PORT
              value: "5432"
            - name: DATABASE_MAX_CONNECTIONS
              value: "50"
            - name: DATABASE_MIN_CONNECTIONS
              value: "0"
            - name: DATABASE_SSL
              value: "false"
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: notes-{{ required "notesInstanceSuffix is required!" .Values.notesInstanceSuffix }}-sqluser-password
                  key: password
            - name: DATABASE_USERNAME
              value: "notes-{{ required "notesInstanceSuffix is required!" .Values.notesInstanceSuffix }}"
            - name: DATABASE_NAME
              value: "notes-{{ required "notesInstanceSuffix is required!" .Values.notesInstanceSuffix }}"
            - name: DATABASE_HOST
              valueFrom:
                secretKeyRef:
                  name: activity
                  key: DATABASE_HOST
            - name: DATABASE_URL
              value: $(DATABASE_DIALECT)://$(DATABASE_USERNAME):$(DATABASE_PASSWORD)@$(DATABASE_HOST):$(DATABASE_PORT)/$(DATABASE_NAME)
            - name : SESSION_SECRET
              valueFrom:
                secretKeyRef:
                  name: activity
                  key: SESSION_SECRET
            - name : JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: activity
                  key: JWT_SECRET
            - name: SF_USERNAME
              valueFrom:
                  secretKeyRef:
                    name: activity
                    key: SF_USERNAME
            - name: SF_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: activity
                  key: SF_PASSWORD
            - name: SF_TOKEN
              valueFrom:
                secretKeyRef:
                  name: activity
                  key: SF_TOKEN
            - name: SLACK_FEEDBACK_URL
              valueFrom:
                secretKeyRef:
                  name: activity
                  key: SLACK_FEEDBACK_URL
            - name: NOTE_SERVICE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: activity
                  key: NOTE_SERVICE_USERNAME
            - name: NOTE_SERVICE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: activity
                  key: NOTE_SERVICE_PASSWORD
